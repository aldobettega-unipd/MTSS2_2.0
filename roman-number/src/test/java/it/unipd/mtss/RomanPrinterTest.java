
/////////////////////////////////////////////
// ALDO BETTEGA 2101087
// PAOLO PREVEDELLO RAMIREZ 2111944
////////////////////////////////////////////

package it.unipd.mtss;

import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;

public class RomanPrinterTest {

    @ParameterizedTest
    @CsvSource({
            "1, ' _____ \n|_   _|\n  | |  \n  | |  \n _| |_ \n|_____|'",
            "2, ' _____  _____ \n|_   _||_   _|\n  | |    | |  \n  | |    | |  \n _| |_  _| |_ \n|_____||_____|'",
            "3, ' _____  _____  _____ \n|_   _||_   _||_   _|\n  | |    | |    | |  \n  | |    | |    | |  \n _| |_  _| |_  _| |_ \n|_____||_____||_____|'",
            "4, ' _____ __      __\n|_   _|\\ \\    / /\n  | |   \\ \\  / / \n  | |    \\ \\/ /  \n _| |_    \\  /   \n|_____|    \\/    '",
            "5, '__      __\n\\ \\    / /\n \\ \\  / / \n  \\ \\/ /  \n   \\  /   \n    \\/    '",
            "6, '__      __ _____ \n\\ \\    / /|_   _|\n \\ \\  / /   | |  \n  \\ \\/ /    | |  \n   \\  /    _| |_ \n    \\/    |_____|'",
            "7, '__      __ _____  _____ \n\\ \\    / /|_   _||_   _|\n \\ \\  / /   | |    | |  \n  \\ \\/ /    | |    | |  \n   \\  /    _| |_  _| |_ \n    \\/    |_____||_____|'",
            "9, ' _____ __   __\n|_   _|\\ \\ / /\n  | |   \\ V / \n  | |    > <  \n _| |_  / . \\ \n|_____|/_/ \\_\\'",
            "10, '__   __\n\\ \\ / /\n \\ V / \n  > <  \n / . \\ \n/_/ \\_\\'",
            "15, '__   ____      __\n\\ \\ / /\\ \\    / /\n \\ V /  \\ \\  / / \n  > <    \\ \\/ /  \n / . \\    \\  /   \n/_/ \\_\\    \\/    '",
            "19, '__   __ _____ __   __\n\\ \\ / /|_   _|\\ \\ / /\n \\ V /   | |   \\ V / \n  > <    | |    > <  \n / . \\  _| |_  / . \\ \n/_/ \\_\\|_____|/_/ \\_\\'",
            "20, '__   ____   __\n\\ \\ / /\\ \\ / /\n \\ V /  \\ V / \n  > <    > <  \n / . \\  / . \\ \n/_/ \\_\\/_/ \\_\\'",
            "30, '__   ____   ____   __\n\\ \\ / /\\ \\ / /\\ \\ / /\n \\ V /  \\ V /  \\ V / \n  > <    > <    > <  \n / . \\  / . \\  / . \\ \n/_/ \\_\\/_/ \\_\\/_/ \\_\\'",
            "40, '__   __ _      \n\\ \\ / /| |     \n \\ V / | |     \n  > <  | |     \n / . \\ | |____ \n/_/ \\_\\|______|'",
            "50, ' _      \n| |     \n| |     \n| |     \n| |____ \n|______|'",
            "60, ' _      __   __\n| |     \\ \\ / /\n| |      \\ V / \n| |       > <  \n| |____  / . \\ \n|______|/_/ \\_\\'",
            "70, ' _      __   ____   __\n| |     \\ \\ / /\\ \\ / /\n| |      \\ V /  \\ V / \n| |       > <    > <  \n| |____  / . \\  / . \\ \n|______|/_/ \\_\\/_/ \\_\\'",
            "80, ' _      __   ____   ____   __\n| |     \\ \\ / /\\ \\ / /\\ \\ / /\n| |      \\ V /  \\ V /  \\ V / \n| |       > <    > <    > <  \n| |____  / . \\  / . \\  / . \\ \n|______|/_/ \\_\\/_/ \\_\\/_/ \\_\\'",
            "90, '__   __  _____ \n\\ \\ / / / ____|\n \\ V / | |     \n  > <  | |     \n / . \\ | |____ \n/_/ \\_\\ \\_____|'",
            "100, '  _____ \n / ____|\n| |     \n| |     \n| |____ \n \\_____|'"

    })
    // Funzione che testa se la funzione print ritorna la stringa della
    // corrispettiva ascii art del numero romano
    public void testPrint(int input, String expectedOutput) {
        assertEquals(expectedOutput, RomanPrinter.print(input));
    }
}